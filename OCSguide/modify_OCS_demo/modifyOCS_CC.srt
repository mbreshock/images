1
00:00:00,200 --> 00:00:01,240
This video will show you how to

2
00:00:01,240 --> 00:00:03,240
modify an existing Open Case Study

3
00:00:03,240 --> 00:00:05,050
for your own specific needs. 

4
00:00:05,100 --> 00:00:07,030
By the end of the demonstration,

5
00:00:07,030 --> 00:00:08,100
you will know how to:

6
00:00:08,100 --> 00:00:10,200
Find the case study GitHub repository

7
00:00:10,200 --> 00:00:13,100
Clone or fork the case study

8
00:00:13,100 --> 00:00:16,030
Open the case study source files in RStudio

9
00:00:16,030 --> 00:00:18,090
Modify the source files

10
00:00:18,090 --> 00:00:21,060
and finally, Compile the modified case study.

11
00:00:22,000 --> 00:00:26,200
You can find the case study repository
using the Open Case Study Search tool on our website,

12
00:00:27,000 --> 00:00:31,000
which is located on the bottom of the webpage,
or you can find it by clicking on the tab.

13
00:00:33,010 --> 00:00:36,100
From here, you can locate the case study
you want to modify

14
00:00:36,100 --> 00:00:39,140
and click on the repository link in
the GitHub repository column.

15
00:00:40,200 --> 00:00:44,100
For this demonstration we will be using
the CO2 Emissions case study.

16
00:00:46,020 --> 00:00:50,120
If your case study offers it, you can
select to edit either the static version repository

17
00:00:50,120 --> 00:00:52,000
or the interactive version. 

18
00:00:52,020 --> 00:00:54,010
For this demonstration, we'll be using the static version.

19
00:00:56,200 --> 00:01:00,000
You can also find a link to the 
repository in the case study itself.

20
00:01:05,230 --> 00:01:09,050
From here, you can clone and
fork the case study repository

21
00:01:09,100 --> 00:01:13,110
using Git shell commands, or the new OCSdata package!

22
00:01:13,210 --> 00:01:16,060
If you don't want the repository's version history,

23
00:01:16,060 --> 00:01:19,160
you may also use the package to download
the case study as a zip file.

24
00:01:19,240 --> 00:01:22,150
I will be using the zip file method
for this demonstration. 

25
00:01:24,010 --> 00:01:27,020
First, you'll need to install the OCSdata package

26
00:01:27,020 --> 00:01:28,220
using the following command.

27
00:01:29,000 --> 00:01:36,060
install.packages() and then in quotes "OCSdata"
[install.packages("OCSdata")]

28
00:01:43,000 --> 00:01:47,190
Once that is finished, you now have access to 
all of the functions available from OCSdata

29
00:01:47,190 --> 00:01:54,000
So if you would like to clone or fork the
repository you may use the `clone_ocs()` function.

30
00:01:54,000 --> 00:01:57,120
All you need is the repository name,
which we can get from GitHub.

31
00:01:59,190 --> 00:02:05,070
You would like to set the outpath to specify where you
want it to download to.

32
00:02:05,070 --> 00:02:07,070
We will just use our current working directory.
[getwd()]

33
00:02:08,000 --> 00:02:13,060
And finally need to specify if you want to fork or clone it.

34
00:02:13,060 --> 00:02:21,100
Set it to `FALSE` if you would like to clone
or `TRUE` if you would like to fork the repository.
[clone: fork_repo = FALSE; fork: fork_repo = TRUE]

35
00:02:21,130 --> 00:02:24,180
However, we will not be using this function
for this demonstration. 

36
00:02:24,180 --> 00:02:28,150
Instead we'll be using the `zip_ocs()` function

37
00:02:28,150 --> 00:02:32,050
which is structured similarly, we just need 
the repository name

38
00:02:32,200 --> 00:02:37,250
and to set where we want the case study 
repository to be downloaded to.

39
00:02:38,110 --> 00:02:41,200
We'll use our current working directory [getwd()]
for that as well.

40
00:02:43,000 --> 00:02:50,230
So hit enter, it will automatically download 
a zip file of the repository.

41
00:02:50,230 --> 00:02:55,210
The function will automatically generate a random 
name for the directory, as you can see at the top here. 

42
00:02:55,210 --> 00:02:57,140
But you are free to change this as you'd like.

43
00:02:57,150 --> 00:03:04,170
Once the case study project opens automatically, 
open the index.Rmd file

44
00:03:04,170 --> 00:03:13,150
and scroll to the section that you want to edit. 

45
00:03:13,150 --> 00:03:22,070
For this demonstration, let's say that we want to 
edit the data import section. 

46
00:03:22,070 --> 00:03:31,150
So you can just type directly into here:
"My new content... blah blah blah"

47
00:03:31,150 --> 00:03:37,240
You can hit save, and then from here you'll move
to the knit dropdown menu. 

48
00:03:37,240 --> 00:03:42,080
You can choose which format you'd like to 
compile your case study in, any of these are fine. 

49
00:03:42,080 --> 00:03:47,000
The Open Case Studies uses HTML files 
so that we may host our case studies online.

50
00:03:47,000 --> 00:03:52,190
But you can easily distribute your case study 
to your students in any of these formats. 

51
00:03:52,190 --> 00:03:56,180
RStudio will automatically begin 
compiling your case study 

52
00:03:56,180 --> 00:04:03,080
and once it is done it will automatically
render a preview of your case study.

53
00:04:03,180 --> 00:04:07,060
In the preview you can scroll to the
section that you edited

54
00:04:07,060 --> 00:04:10,000
and see your new content in the case study. 

55
00:04:10,000 --> 00:04:16,200
You can also see the compiled file in 
your working directory: index.html.

56
00:04:16,200 --> 00:04:20,130
This will say .pdf or .doc depending on
which one you picked. 

57
00:04:20,180 --> 00:04:24,040
That's all you have to do to modify a 
case study! Thank you for watching. 







